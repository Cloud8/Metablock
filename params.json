{
  "name": "Metablock",
  "tagline": "Library Stuff",
  "body": "\r\n## Metablock: Semantic Publishing Tools \r\n\r\n  [Metablock](http://cloud8.github.io/Metablock) reads RDF data and \r\n  writes a possibly modified resource description back to a RDF target.\r\n\r\n##### RDF Data sources:\r\n  \r\n  - SPARQL service endpoints\r\n  - RDF data files \r\n  - OAI data sources with XSLT lifting\r\n  - RDBMS with XSLT lifting\r\n\r\n##### RDF data targets:\r\n\r\n  - Virtuoso RDF storage\r\n  - Jena TDB storage\r\n  - RDF data files \r\n  - Solr search index with XSLT transformation\r\n\r\n##### Compile && Configure\r\n\r\n  - configured by lib/metablock.ttl \r\n  - make \r\n  - java -jar metablock.jar\r\n\r\n##### Indexing : write RDF data to a Solr search index\r\n\r\n  To build a Solr search index from a SPARQL service endpoint,\r\n  three steps are required:\r\n\r\n  1. Resource Enumeration: List all resources that should be indexed,\r\n\r\n  2. Resource Dump: Query everything the triple store knows about a resource,\r\n\r\n  3. Resource Tranformation: Transform RDF/XML to solr index format.\r\n\r\n\r\nStep 1. and 2. need a SPARQL query, step 3 works with XSLT. <br/>\r\n  The sparql queries and xslt transformations used so far are rather general, \r\n  but modelling of bibliographic resources may vary and require modification.  \r\n\r\n  All configurations are done in turtle (see lib/metablock.ttl)\r\n\r\n##### RDF Crawling\r\n\r\n  RDF data sources configured in *lib/metablock.ttl* can be tested with\r\n\r\n    java -jar metablock.jar -s [source] -t [target] -test\r\n\r\n  Copy from RDF *source* to RDF *target*\r\n\r\n    java -jar metablock.jar -s [source] -t [target]\r\n\r\n\r\n##### RDF analyzers\r\n\r\n  PDF Analyzer: utilizes Grobid / CERMINE to extract metadata and\r\n  bibliographical references from scientific articles \r\n\r\n    java -jar metablock.jar -s [source] -t [target] -e pdf\r\n\r\n  Reference Analysis: use external libraries to find citation context and\r\n  determine citation polarity\r\n\r\n    java -jar metablock.jar -s [source] -t [target] -e sen\r\n\r\n\r\n##### Examples\r\n\r\n   1. Index a directory of PDF files, enable pdf engine to extract metadata \r\n      and write to VuFind:\r\n\r\n        java -jar metablock.jar -crawl -s files -t solr1 -e pdf Documents\r\n\r\n   2. Write DSpace metadata from DSpace REST API to Virtuoso triplestore \r\n      (experimental):\r\n   \r\n        java -jar metablock.jar -crawl -s dspace -t virt\r\n\r\n   3. Crawl OAI sources to a jena TDB store:\r\n\r\n        java -jar metablock.jar -crawl -s oai -t tdb\r\n\r\n   4. Build a search index for a TDB triple store\r\n\r\n        java -jar metablock.jar -crawl -s tdb -t solr1\r\n\r\n\r\n\r\n##### Developer Documentation\r\n\r\n  [Javadoc](http://cloud8.github.io/Metablock/doc) is available online.\r\n\r\n------------------------------------------------------------------------\r\n\r\n____________________________________________________________________________\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}